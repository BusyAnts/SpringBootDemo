spring:
  datasource:
    one:
      username: root
      password: chenZhen
      driver-class-name: com.mysql.jdbc.Driver  # 可以自动识别
      url: jdbc:mysql://localhost:3306/springboot_demo?useUnicode=true&characterEncoding=utf-8&useSSL=false
      druid:
        initial-size: 5  # 初始化连接大小
        max-active: 20  # 最大连接数
        min-idle: 10    # 最小空闲连接数
        max-wait: 60000  # 配置获取连接等待超时的时间
        validationQuery: select 1
        test-on-borrow: false
        time-between-eviction-runs-millis: 2000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        min-evictable-idle-time-millis: 600000  # 配置一个连接在池中最小生存的时间，单位是毫秒
        max-evictable-idle-time-millis: 900000  # 配置一个连接在池中最大生存的时间，单位是毫秒
        test-on-return: false
        test-while-idle: true
        keep-alive: true
        phyMaxUseCount: 1000
        filter:
          stat:
            enabled: true  # 配置监控统计拦截的filters
    two:
      username: root
      password: chenZhen
      driver-class-name: com.mysql.jdbc.Driver  # 可以自动识别
      url: jdbc:mysql://localhost:3306/springboot_demo2?useUnicode=true&characterEncoding=utf-8&useSSL=false
      druid:
        initial-size: 5  # 初始化连接大小
        max-active: 20  # 最大连接数
        min-idle: 10    # 最小空闲连接数
        max-wait: 60000  # 配置获取连接等待超时的时间
        validationQuery: select 1
        test-on-borrow: false
        time-between-eviction-runs-millis: 2000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        min-evictable-idle-time-millis: 600000  # 配置一个连接在池中最小生存的时间，单位是毫秒
        max-evictable-idle-time-millis: 900000  # 配置一个连接在池中最大生存的时间，单位是毫秒
        test-on-return: false
        test-while-idle: true
        keep-alive: true
        phyMaxUseCount: 1000
        filter:
          stat:
            enabled: true  # 配置监控统计拦截的filters
